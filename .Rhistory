labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings <- joined_frames %>%
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
group_by(ARC2, US_TITLE) %>%
mutate(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
top_n(10, Total_Savings)
# Determine top 10 ARC codes based on total savings across all industries
arc_industry_savings
# Filter data to include only top ARC codes and prepare for plotting
top_arc_details <- arc_industry_savings %>%
filter(ARC2 %in% top_arcs)
# Plot
ggplot(arc_industry_savings, aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings <- joined_frames %>%
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
group_by(ARC2, US_TITLE) %>%
mutate(Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(10, Total_Savings)
# Determine top 10 ARC codes based on total savings across all industries
arc_industry_savings
# Filter data to include only top ARC codes and prepare for plotting
top_arc_details <- arc_industry_savings %>%
filter(ARC2 %in% top_arcs)
# Plot
ggplot(arc_industry_savings, aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot(arc_industry_savings, aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot( aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Determine top 10 ARC codes based on total savings across all industries
arc_industry_savings
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot( aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter data to include only top ARC codes and prepare for plotting
top_arc_details <- arc_industry_savings %>%
filter(ARC2 %in% top_arcs)
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot( aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot( aes(x = US_TITLE, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
ggplot( aes(x = US_TITLE, y = TOTAL_SAVED, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings
# Plot
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
top_n(ARC2, 10)
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
top_n(10, ARC2)
ggplot( aes(x = US_TITLE, y = TOTAL_SAVED, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings <- joined_frames %>%
mutate(TOTAL_SAVED = sum(PSAVED, SSAVED, TSAVED, QSAVED, na.rm = TRUE)) %>%
group_by(ARC2, US_TITLE) %>%
top_n(10, ARC2) %>%
ggplot( aes(x = US_TITLE, y = TOTAL_SAVED, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendation ARC Codes by Savings Across Industries",
x = "ARC Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arc_industry_savings
# Plot
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_data, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_data, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_data, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_frames, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_frames, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Saved = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Saved, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_frames, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Filter original data to include only these industries
inner_join(., joined_frames, by = "US_TITLE") %>%
# Sum savings again for filtered data by recommendation
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
pull(US_TITLE) %>%
# Filter original data to include only these top 5 industries
{ filter(joined_frames, US_TITLE %in% .) } %>%
# Recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Store interim results to filter by top industries
ungroup() %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
select(US_TITLE) %>%
# Use a semi_join to filter original data to include only these top 5 industries
semi_join(joined_frames, by = "US_TITLE") %>%
# Regroup to recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Ensure ARC2 is available as expected
select(US_TITLE, ARC2, PSAVED, SSAVED, TSAVED, QSAVED) %>%  # Explicitly select necessary columns
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
ungroup() %>%  # Remove grouping to prevent issues in subsequent steps
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
pull(US_TITLE) %>%
# Re-filter original data to include only these top 5 industries
{ filter(joined_frames, US_TITLE %in% .) } %>%
# Recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
pull(US_TITLE) %>%
# Re-filter original data to include only these top 5 industries
{ filter(joined_frames, US_TITLE %in% .) %>%
# Make sure to re-calculate total savings
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED)
} %>%
# Recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = ARC2, y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
pull(US_TITLE) %>%
# Re-filter original data to include only these top 5 industries
{ filter(joined_frames, US_TITLE %in% .) %>%
# Make sure to re-calculate total savings
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED)
} %>%
# Recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
ungroup() %>%
# Plotting
ggplot(aes(x = factor(ARC2), y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
# Group by industry and recommendation code, sum savings
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Identify top 5 industries by total savings
group_by(US_TITLE) %>%
summarise(Industry_Total_Savings = sum(Total_Savings, na.rm = TRUE)) %>%
top_n(5, Industry_Total_Savings) %>%
# Extract top 5 industry names
pull(US_TITLE) %>%
# Re-filter original data to include only these top 5 industries
{ filter(joined_frames, US_TITLE %in% .) %>%
# Make sure to re-calculate total savings
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED)
} %>%
# Recalculate savings per ARC2 within these top industries
group_by(US_TITLE, ARC2) %>%
summarise(Total_Savings = sum(Total_Savings, na.rm = TRUE), .groups = 'drop') %>%
# Get top 10 recommendations by total savings within these industries
top_n(10, Total_Savings) %>%
# Prepare data for plotting
# Plotting
ggplot(aes(x = factor(US_TITLE), y = Total_Savings, fill = US_TITLE)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Top 10 Recommendations by Savings Across Top 5 Industries",
x = "Recommendation Code", y = "Total Savings", fill = "Industry") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Complete pipeline from data preparation to plotting
joined_frames %>%
filter(!is.na(US_TITLE)
# Calculate total savings per recommendation
mutate(Total_Savings = PSAVED + SSAVED + TSAVED + QSAVED) %>%
